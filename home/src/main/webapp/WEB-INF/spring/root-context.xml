<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 
		이 설정파일은 요청과는 관계없는 "공용 설정"을 위한 파일
		- 이곳에 작성한 설정들은 servlet-context.xml에서 사용 가능
		- 상위 설정 파일
		- Database나 스케쥴러, 트랜잭션 등과 관련된 설정을 구현
	 -->


	<!-- 
		데이터베이스 연결을 담당하는 객체를 등록
		- DriverManagerDataSource
	 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="home"></property>
		<property name="password" value="home"></property>
	</bean>

	<!-- 
		DBCP용 연결 도구 설정
		- common-dbcp2가 필요함 
	-->
	<bean id="dbcpSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="home"></property>
		<property name="password" value="home"></property>

		<property name="maxTotal" value="20"></property>
		<property name="maxIdle" value="10"></property>
		<property name="maxWaitMillis" value="3000"></property>
	</bean>

	<!-- 
		데이터베이스 명령 처리기를 등록
		- JdbcTemplate
		- 연결객체를 주입하면 자동으로 실행시 연결 및 종료를 수행
	 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dbcpSource"></property>
	</bean>
	
	<!-- 
	
		myBatis 도구 등록
 		-sqlSession(org.mybatis.spring.SqlSessionFactoryBean)
 			-database 대한 전반적 관리 수행 도구
 		-sqlSessionTemplate(org.mybatis.spring.SqlSessionTemplate)
 			-mybatis 가 spring에 연동되도록 만들어주는 핵심 도구
 			-동시 다발적인 처리를 안전하게 수행할 수 있도록 설계어 있다
 	
 	-->
	
	<bean id = "sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dbcpSource"></property>
		<property name="configLocation" value="classpath:/com/kh/home/mybatis/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/com/kh/home/mybatis/**/*-mapper.xml"></property>
																															<!--  하위 하나=*, 하위 모든 폴더** -->
		
	</bean>
	
	<bean id = "sqlSessionTemplate" class ="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref = "sqlSession"></constructor-arg>
	</bean>

	<!-- 
		componenetscan
		-@Configuration
		-@Service
		-@Repository,  etc
		
		(exclude filter)
	 -->
	 <context:component-scan base-package="com.kh.home" use-default-filters="false">
	 		<context:include-filter type="regex" expression="com.kh.home.*"/>
	 		 <context:exclude-filter type="annotation" expression = "org.springframework.stereotype.Controller"/>
	
	
	
	 </context:component-scan>


</beans>